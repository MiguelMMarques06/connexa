# Script para corrigir pol√≠tica de execu√ß√£o do PowerShell
# Execute como Administrador: powershell -ExecutionPolicy Bypass -File .\corrigir-powershell.ps1

Write-Host "üîß CORRIGINDO POL√çTICA DE EXECU√á√ÉO DO POWERSHELL" -ForegroundColor Yellow
Write-Host "===============================================" -ForegroundColor Gray
Write-Host ""

# Verificar se est√° executando como administrador
$isAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")

if (-not $isAdmin) {
    Write-Host "‚ö†Ô∏è Este script precisa ser executado como Administrador!" -ForegroundColor Red
    Write-Host ""
    Write-Host "üîß Como executar como Administrador:" -ForegroundColor Yellow
    Write-Host "   1. Abra PowerShell como Administrador" -ForegroundColor Gray
    Write-Host "   2. Execute: cd '$PSScriptRoot'" -ForegroundColor Gray
    Write-Host "   3. Execute: powershell -ExecutionPolicy Bypass -File .\corrigir-powershell.ps1" -ForegroundColor Gray
    Write-Host ""
    Write-Host "Ou use a alternativa segura sem privil√©gios:" -ForegroundColor Green
    Write-Host "   .\iniciar-simples.bat" -ForegroundColor Cyan
    Write-Host ""
    Read-Host "Pressione Enter para sair"
    exit 1
}

Write-Host "‚úÖ Executando como Administrador" -ForegroundColor Green
Write-Host ""

# Mostrar pol√≠tica atual
Write-Host "üìã Pol√≠tica atual:" -ForegroundColor Cyan
$currentPolicy = Get-ExecutionPolicy
Write-Host "   $currentPolicy" -ForegroundColor Gray
Write-Host ""

# Definir pol√≠tica mais permissiva
Write-Host "üîß Alterando pol√≠tica de execu√ß√£o..." -ForegroundColor Cyan
try {
    Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser -Force
    Write-Host "‚úÖ Pol√≠tica alterada para RemoteSigned (usu√°rio atual)" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Erro ao alterar pol√≠tica para usu√°rio atual" -ForegroundColor Yellow
    
    # Tentar pol√≠tica global
    try {
        Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine -Force
        Write-Host "‚úÖ Pol√≠tica alterada para RemoteSigned (m√°quina local)" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Erro ao alterar pol√≠tica de execu√ß√£o" -ForegroundColor Red
        Write-Host "   Erro: $($_.Exception.Message)" -ForegroundColor Gray
    }
}

Write-Host ""

# Verificar nova pol√≠tica
Write-Host "üìã Nova pol√≠tica:" -ForegroundColor Cyan
$newPolicy = Get-ExecutionPolicy
Write-Host "   $newPolicy" -ForegroundColor Gray
Write-Host ""

if ($newPolicy -ne "Restricted") {
    Write-Host "‚úÖ CORRE√á√ÉO CONCLU√çDA!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üìù O que foi feito:" -ForegroundColor Yellow
    Write-Host "   - Pol√≠tica alterada de '$currentPolicy' para '$newPolicy'" -ForegroundColor Gray
    Write-Host "   - Scripts PowerShell agora podem ser executados" -ForegroundColor Gray
    Write-Host ""
    Write-Host "üöÄ Agora voc√™ pode usar:" -ForegroundColor Green
    Write-Host "   .\inicializar.ps1" -ForegroundColor Cyan
    Write-Host "   .\limpar-e-iniciar.ps1" -ForegroundColor Cyan
    Write-Host "   .\diagnostico.ps1" -ForegroundColor Cyan
} else {
    Write-Host "‚ùå A pol√≠tica ainda est√° restritiva" -ForegroundColor Red
    Write-Host ""
    Write-Host "üîß Alternativas:" -ForegroundColor Yellow
    Write-Host "   1. Use: .\iniciar-simples.bat" -ForegroundColor Cyan
    Write-Host "   2. Execute PowerShell sempre com: powershell -ExecutionPolicy Bypass -File script.ps1" -ForegroundColor Cyan
}

Write-Host ""
Write-Host "‚ÑπÔ∏è Informa√ß√µes sobre pol√≠ticas:" -ForegroundColor Blue
Write-Host "   - Restricted: Nenhum script pode ser executado" -ForegroundColor Gray
Write-Host "   - RemoteSigned: Scripts locais podem executar, remotos precisam assinatura" -ForegroundColor Gray
Write-Host "   - Unrestricted: Todos os scripts podem executar (menos seguro)" -ForegroundColor Gray
Write-Host ""
Read-Host "Pressione Enter para continuar"